[
  {
    "n": 1,
    "title": "What Is Cryptography?",
    "math": "Information theory",
    "note": "This section provides a formal definition of cryptography as the practice and study of techniques for secure communication in the presence of third parties called adversaries. It introduces the core goals of modern cryptography: Confidentiality, Integrity, Authenticity, and Non-repudiation."
  },
  {
    "n": 2,
    "title": "Kerckhoffs's Principle and Threat Modeling",
    "math": "Security principles",
    "note": "This lesson explains foundational principles. Kerckhoffs's Principle states that a system should be secure even if everything except the key is public. It also introduces the idea of threat modeling: assuming a powerful adversary who knows the algorithms and can intercept all communication."
  },
  {
    "n": 3,
    "title": "Classical Ciphers and Frequency Analysis",
    "math": "Modular arithmetic, statistical analysis",
    "note": "This section introduces classical cryptography (e.g., the Caesar cipher) to illustrate basic concepts. It then immediately explains how these simple ciphers are broken using frequency analysis, demonstrating why they are not secure for modern use."
  },
  {
    "n": 4,
    "title": "The One-Time Pad: Perfect Secrecy",
    "math": "Information-theoretic security",
    "note": "This section introduces the One-Time Pad (OTP), a unique encryption technique that is mathematically proven to be impossible to break if used correctly. It explains the requirements for perfect secrecy: the key must be truly random, at least as long as the message, and never reused."
  },
  {
    "n": 5,
    "title": "The Importance of Randomness",
    "math": "Random number generation",
    "note": "This lesson explains that cryptographic systems require high-quality randomness for keys, nonces, and other values. It contrasts insecure pseudorandom number generators (PRNGs) with Cryptographically Secure PRNGs (CSPRNGs) and highlights the dangers of using predictable numbers."
  },
  {
    "n": 6,
    "title": "Modern Cryptography: Symmetric-Key Encryption",
    "math": "Symmetric-key algorithms",
    "note": "This lesson introduces symmetric-key cryptography, where the same secret key is used for both encryption and decryption. It is contrasted with classical ciphers by its use of complex, computer-based algorithms. The main challenge of this approach—securely sharing the key—is highlighted."
  },
  {
    "n": 7,
    "title": "Block Ciphers vs. Stream Ciphers",
    "math": "Data processing modes",
    "note": "This section explains the two main types of modern symmetric ciphers. A Block Cipher operates on fixed-size blocks of data (e.g., 128 bits) with a fixed key. A Stream Cipher encrypts digits of a plaintext one at a time, typically by combining the plaintext with a pseudorandom cipher digit stream."
  },
  {
    "n": 8,
    "title": "The Advanced Encryption Standard (AES)",
    "math": "Substitution-permutation networks",
    "note": "This lesson introduces the Advanced Encryption Standard (AES) as the modern, worldwide standard for symmetric encryption. It provides a high-level overview of its operation, which involves multiple rounds of substitution and permutation operations on blocks of data. The different key sizes (128, 192, 256 bits) are discussed."
  },
  {
    "n": 9,
    "title": "Block Cipher Modes of Operation",
    "math": "Cryptographic modes of operation",
    "note": "This section explains that a block cipher on its own can only encrypt a single block. A 'mode of operation' describes how to repeatedly apply a block cipher's single-block operation. It introduces common modes like ECB (insecure), CBC, and CTR, and explains the need for an Initialization Vector (IV)."
  },
  {
    "n": 10,
    "title": "Authenticated Encryption (AEAD)",
    "math": "Authenticated encryption",
    "note": "This lesson introduces the modern best practice for symmetric encryption. AEAD schemes, like AES-GCM, combine confidentiality (encryption) and integrity/authenticity (a MAC) into a single, integrated operation. This is less error-prone and more secure than applying encryption and a MAC separately."
  },
  {
    "n": 11,
    "title": "The Revolution: Public-Key Cryptography",
    "math": "Asymmetric-key algorithms",
    "note": "This lesson introduces the concept of public-key (or asymmetric) cryptography. It explains the use of a key pair: a public key, which can be shared with anyone, for encryption, and a private key, which is kept secret, for decryption. This solves the key distribution problem of symmetric cryptography."
  },
  {
    "n": 12,
    "title": "Diffie-Hellman Key Exchange",
    "math": "Discrete logarithm problem",
    "note": "This lesson explains the Diffie-Hellman key exchange protocol, a method for two parties to securely establish a shared secret key over an insecure communication channel. It allows two parties with no prior knowledge of each other to jointly create a key that can then be used for symmetric encryption."
  },
  {
    "n": 13,
    "title": "The RSA Algorithm",
    "math": "Number theory (prime factorization)",
    "note": "This section introduces the RSA algorithm, one of the first and most widely used public-key cryptosystems. It explains that the security of RSA is based on the practical difficulty of factoring the product of two large prime numbers (the 'factoring problem')."
  },
  {
    "n": 14,
    "title": "Elliptic Curve Cryptography (ECC)",
    "math": "Elliptic curves over finite fields",
    "note": "This lesson introduces Elliptic Curve Cryptography (ECC) as the more modern and efficient alternative to RSA. It explains at a high level that ECC can provide the same level of security as RSA with much smaller key sizes, making it ideal for mobile devices and most modern applications."
  },
  {
    "n": 15,
    "title": "Cryptographic Hash Functions",
    "math": "Hash functions",
    "note": "This section defines a cryptographic hash function as a mathematical algorithm that maps data of arbitrary size to a bit string of a fixed size (a 'hash'). It details the essential properties: it's a one-way function (pre-image resistant), and it's collision-resistant (hard to find two inputs that hash to the same output)."
  },
  {
    "n": 16,
    "title": "Applications: Password Storage and File Integrity",
    "math": "Data integrity",
    "note": "This lesson covers the primary use cases for hash functions. These include verifying file integrity (by comparing hashes) and securely storing passwords. It explains why you must use a 'salted' hash for passwords to protect against rainbow table attacks."
  },
  {
    "n": 17,
    "title": "Message Authentication Codes (MACs)",
    "math": "Message authentication",
    "note": "This section introduces Message Authentication Codes (MACs) as a way to verify both the integrity and authenticity of a message using a shared secret key. It explains how a MAC (like HMAC) is generated from the message and the key, and how the recipient can recalculate it to ensure the message hasn't been tampered with."
  },
  {
    "n": 18,
    "title": "Digital Signatures",
    "math": "Digital signature algorithms",
    "note": "This lesson explains digital signatures as the public-key equivalent of a MAC. A digital signature is created by hashing a message and then encrypting the hash with the sender's private key. Anyone with the sender's public key can decrypt the hash and verify it, providing authenticity, integrity, and non-repudiation."
  },
  {
    "n": 19,
    "title": "Public Key Infrastructure (PKI)",
    "math": "Trust models",
    "note": "This section addresses a key problem in public-key cryptography: how do you trust that a public key actually belongs to the person you think it does? It introduces Public Key Infrastructure (PKI) as a system for managing this trust, based on third-party Certificate Authorities (CAs)."
  },
  {
    "n": 20,
    "title": "Digital Certificates and Certificate Authorities",
    "math": "X.509 certificates",
    "note": "This lesson details the components of a PKI. A Certificate Authority (CA) is a trusted entity that issues Digital Certificates. A Digital Certificate (like an X.509 certificate) is a data file that binds a public key to a specific identity, and is itself digitally signed by the CA."
  },
  {
    "n": 21,
    "title": "How HTTPS Secures the Web",
    "math": "Transport Layer Security (TLS)",
    "note": "This lesson explains how all these cryptographic concepts come together to secure web traffic with HTTPS. It details the TLS handshake process, where a browser uses a web server's public key (from its certificate) to negotiate a symmetric session key, which is then used for fast, confidential communication."
  },
  {
    "n": 22,
    "title": "Application: Cryptocurrencies and Blockchain",
    "math": "Decentralized systems",
    "note": "This lesson explains how cryptographic primitives form the backbone of cryptocurrencies like Bitcoin. It shows how cryptographic hashing is used to create an immutable chain of blocks, and how digital signatures (specifically ECDSA) are used to prove ownership of assets without a central authority."
  },
  {
    "n": 23,
    "title": "Side-Channel Attacks",
    "math": "Implementation security",
    "note": "This lesson introduces a class of attacks that do not target the mathematical weaknesses of a cipher, but rather its physical implementation. It explains how an attacker might analyze power consumption or timing information to deduce a secret key, highlighting that a secure algorithm requires a secure implementation."
  },
  {
    "n": 24,
    "title": "Advanced Concept: Zero-Knowledge Proofs",
    "math": "Interactive proof systems",
    "note": "This section provides a high-level introduction to Zero-Knowledge Proofs (ZKPs). It explains the powerful concept of being able to prove that you know a secret (e.g., the solution to a puzzle or a password) without revealing the secret itself, and mentions its growing importance in privacy-preserving technologies."
  },
  {
    "n": 25,
    "title": "The Future: Post-Quantum Cryptography",
    "math": "Quantum computing (Shor's algorithm)",
    "note": "This final lesson looks to the future threat of quantum computing. It explains that large-scale quantum computers could break most current public-key crypto (RSA, ECC). This has led to the development of post-quantum cryptography (PQC), a new generation of algorithms believed to be resistant to quantum attacks."
  }
]
