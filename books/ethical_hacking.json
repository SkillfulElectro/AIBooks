[
  {
    "n": 1,
    "title": "What Is Ethical Hacking?",
    "math": "Information security auditing",
    "note": "This section defines Ethical Hacking (also known as penetration testing) as the practice of legally and legitimately attempting to bypass system security to identify potential data breaches and threats in a network. The primary purpose is to improve the security of the system."
  },
  {
    "n": 2,
    "title": "Types of Hackers: White, Black, and Grey Hat",
    "math": "Hacker classification",
    "note": "This lesson categorizes hackers based on their motives. A White Hat hacker is an ethical hacker who has permission to probe for vulnerabilities. A Black Hat hacker violates computer security for personal gain or malice. A Grey Hat hacker is a blend of both, who might find a vulnerability and report it, but may have done so without permission."
  },
  {
    "n": 3,
    "title": "The 5 Phases of Hacking",
    "math": "Attack lifecycle",
    "note": "This section introduces the standard five-phase methodology used in penetration testing. The phases are: 1. Reconnaissance (gathering information), 2. Scanning (probing for vulnerabilities), 3. Gaining Access (exploitation), 4. Maintaining Access (installing backdoors), and 5. Clearing Tracks (removing evidence)."
  },
  {
    "n": 4,
    "title": "Phase 1: Reconnaissance (Footprinting)",
    "math": "Information gathering",
    "note": "This lesson covers the first phase, which is about gathering as much information as possible about a target. It contrasts Passive Reconnaissance (gathering information from publicly available sources like `whois` lookups and Google Hacking) with Active Reconnaissance (directly interacting with the target system)."
  },
  {
    "n": 5,
    "title": "Phase 2: Scanning with `nmap`",
    "math": "Network scanning",
    "note": "This section focuses on the scanning phase using the powerful tool `nmap`. It demonstrates how to use `nmap` to discover live hosts on a network, perform port scanning to find open ports, and perform service and version detection to identify the software running on those ports."
  },
  {
    "n": 6,
    "title": "Phase 3: Gaining Access - System Hacking",
    "math": "System exploitation",
    "note": "This lesson provides an overview of the exploitation phase. It covers common techniques for gaining access to a system, such as password cracking (using tools like John the Ripper or Hashcat) and exploiting known software vulnerabilities to achieve privilege escalation."
  },
  {
    "n": 7,
    "title": "Phase 3: Gaining Access - Social Engineering",
    "math": "Social engineering",
    "note": "This section explains that the easiest way into a system is often by exploiting the human element. It covers social engineering tactics like phishing (tricking users into giving up credentials) and baiting (leaving an infected USB drive for an employee to find and use)."
  },
  {
    "n": 8,
    "title": "Phase 4: Maintaining Access",
    "math": "Persistence mechanisms",
    "note": "This lesson covers what an attacker does after gaining initial access. The goal is to maintain that access for future use. This is often done by installing persistence mechanisms like backdoors, rootkits, or trojans."
  },
  {
    "n": 9,
    "title": "Phase 5: Clearing Tracks",
    "math": "Anti-forensics",
    "note": "This section explains the final phase, where an attacker attempts to remove all evidence of their presence. This can include deleting or modifying system logs, using techniques to hide files or processes, and removing any tools that were uploaded to the compromised system."
  },
  {
    "n": 10,
    "title": "Web Application Hacking: SQL Injection",
    "math": "SQL Injection (SQLi)",
    "note": "This lesson focuses on one of the most common and dangerous web vulnerabilities. It explains how an attacker can insert or 'inject' a malicious SQL query via the input data from the client to the application. A successful SQLi exploit can read sensitive data from the database, modify database data, and execute administration operations."
  },
  {
    "n": 11,
    "title": "Web Application Hacking: Cross-Site Scripting (XSS)",
    "math": "Cross-Site Scripting (XSS)",
    "note": "This section covers XSS, a vulnerability where an attacker injects malicious scripts into content from otherwise trusted websites. When a user visits the site, the malicious script runs in their browser, allowing the attacker to steal session tokens, deface websites, or redirect the user to malicious sites."
  },
  {
    "n": 12,
    "title": "Wireless Network Hacking",
    "math": "Wireless security exploitation",
    "note": "This lesson provides an overview of common attacks against Wi-Fi networks. It explains how an attacker can capture the WPA2 handshake and then use an offline brute-force or dictionary attack to crack the network password. The importance of using a strong passphrase is emphasized."
  },
  {
    "n": 13,
    "title": "Introduction to Metasploit",
    "math": "Exploitation frameworks",
    "note": "This section introduces the Metasploit Framework, the world's most used penetration testing framework. It explains how Metasploit makes hacking simple for professionals by providing a vast database of exploits and a framework for using them to test computer systems."
  },
  {
    "n": 14,
    "title": "The Penetration Test Report",
    "math": "Technical reporting",
    "note": "This final lesson explains that the most important part of an ethical hack is the report. The report details the vulnerabilities that were found, assesses their risk to the business, and provides concrete recommendations for how to fix them."
  }
]
