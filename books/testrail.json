[
  {
    "n": 1,
    "title": "Introduction to Test Case Management",
    "math": "Test management",
    "note": "This section explains the need for a systematic approach to managing the testing process, especially in large projects. It introduces a Test Case Management tool as a central hub for organizing test cases, planning test executions, and tracking results."
  },
  {
    "n": 2,
    "title": "What Is TestRail?",
    "math": "Test management tools",
    "note": "This lesson introduces TestRail as a popular web-based test case management tool. It is used by QA teams to manage, track, and organize their software testing efforts. Its key features, such as its intuitive web interface and powerful reporting, are highlighted."
  },
  {
    "n": 3,
    "title": "Navigating the TestRail Dashboard and Projects",
    "math": "User interface tour",
    "note": "This section provides a guided tour of the TestRail interface. It explains the main Dashboard, which gives a high-level overview of recent activity and project status, and how to navigate into a specific Project, which is the container for all test-related artifacts for a single product."
  },
  {
    "n": 4,
    "title": "The Test Cases Tab",
    "math": "Test case organization",
    "note": "This lesson focuses on the 'Test Cases' tab within a project. It explains how this area serves as the repository for all the test cases your team writes. The concept of organizing test cases into 'suites' and hierarchical 'sections' (folders) is introduced."
  },
  {
    "n": 5,
    "title": "Creating a Test Case",
    "math": "Test case design",
    "note": "This section provides a practical guide to creating a new test case in TestRail. It details the standard fields of a test case, including the 'Title', 'Preconditions', 'Steps' (the actions to perform), and 'Expected Result' (the desired outcome)."
  },
  {
    "n": 6,
    "title": "Using Different Field Templates",
    "math": "Test case templates",
    "note": "This lesson explains that TestRail supports different templates for test cases. It contrasts the default 'Steps' template with the 'Text' template, which is simpler and used for more exploratory or unstructured test cases."
  },
  {
    "n": 7,
    "title": "Importing Test Cases from a CSV File",
    "math": "Data import",
    "note": "This section covers how to bulk-import test cases from an external file. It demonstrates how to structure a CSV file with the test case fields and then use TestRail's import wizard to map the CSV columns to the TestRail fields."
  },
  {
    "n": 8,
    "title": "The Test Runs & Results Tab",
    "math": "Test execution planning",
    "note": "This lesson introduces the 'Test Runs & Results' tab, which is where you plan and execute your tests. It explains that a 'Test Run' is a collection of test cases that you intend to execute for a specific purpose, like testing a new feature."
  },
  {
    "n": 9,
    "title": "Creating a Test Run",
    "math": "Test run creation",
    "note": "This section demonstrates how to create a new Test Run. It covers giving the run a name, assigning it to a specific person, and, most importantly, selecting which test cases to include in the run, either by including all cases or by selecting specific suites or sections."
  },
  {
    "n": 10,
    "title": "Executing a Test Run",
    "math": "Test execution",
    "note": "This lesson walks through the process of executing a test. It shows the test execution screen where the tester sees the steps and expected results, and can then add a result for the test."
  },
  {
    "n": 11,
    "title": "Adding Results",
    "math": "Test status",
    "note": "This section details the different statuses you can assign to a test result. These include 'Passed', 'Failed', 'Blocked' (if the test cannot be run), and 'Retest' (to mark a test that needs to be run again). It also shows how to add comments and attach files (like screenshots) to a result."
  },
  {
    "n": 12,
    "title": "Test Plans",
    "math": "Test planning",
    "note": "This lesson introduces Test Plans as a way to group multiple Test Runs together. Test Plans are typically used to manage the testing for an entire release or milestone, allowing you to track the progress of several different test runs (e.g., for different features or platforms) in one place."
  },
  {
    "n": 13,
    "title": "Milestones",
    "math": "Milestone tracking",
    "note": "This section explains how to use Milestones to track major project phases or releases. You can associate Test Plans and Runs with a milestone, and TestRail will provide reports showing the overall progress toward completing all the testing for that milestone."
  },
  {
    "n": 14,
    "title": "Reporting and Metrics",
    "math": "Test reporting",
    "note": "This lesson covers TestRail's reporting capabilities. It demonstrates how to generate various built-in reports, such as a summary of a test plan or run, which can be used to communicate the status of the testing effort to stakeholders."
  },
  {
    "n": 15,
    "title": "The 'Todos' Page",
    "math": "Task management",
    "note": "This section explains the 'Todos' page, which acts as a personal dashboard for each user. It shows all the tests that are currently assigned to you, across all projects, making it easy to see what work you need to do."
  },
  {
    "n": 16,
    "title": "Integration with Issue Trackers like Jira",
    "math": "Toolchain integration",
    "note": "This lesson explains the importance of integrating your test case management tool with your issue tracking tool. This provides traceability between defects and the tests that found them."
  },
  {
    "n": 17,
    "title": "Pushing Defects to Jira",
    "math": "Defect reporting",
    "note": "This section demonstrates a key integration feature. When a test fails in TestRail, you can click the 'Push' button to automatically create a new bug report in Jira. TestRail pre-fills the bug report with the details from the test case and result, saving time and ensuring consistency."
  },
  {
    "n": 18,
    "title": "The TestRail API",
    "math": "API for test automation",
    "note": "This lesson provides a high-level overview of the TestRail API. It explains that this API can be used to integrate automated tests with TestRail. An automated test script can use the API to fetch test cases to run and then post the results back to TestRail."
  },
  {
    "n": 19,
    "title": "Customizing Fields",
    "math": "Customization",
    "note": "This section for administrators covers how to customize TestRail. It demonstrates how to add custom fields to your test cases or results to capture information that is specific to your team's workflow."
  },
  {
    "n": 20,
    "title": "Managing Users and Roles",
    "math": "User administration",
    "note": "This final lesson provides an overview of user management. It shows how administrators can add users, organize them into groups, and assign roles and permissions to control what each user is allowed to see and do within TestRail."
  }
]
