[
  {
    "n": 1,
    "title": "Introduction to HTML and the Web",
    "math": "Set theory",
    "note": "This section introduces the basic concept of HTML as the standard markup language for creating Web pages. It covers the history of the web, the roles of HTML, CSS, and JavaScript, and what a web browser does. The context is a standard web browser environment."
  },
  {
    "n": 2,
    "title": "Basic Structure of an HTML Document",
    "math": "Graph theory",
    "note": "Explains the fundamental structure of an HTML document, including the `<!DOCTYPE html>` declaration, and the `<html>`, `<head>`, and `<body>` elements. The lesson covers the purpose of the `<head>` tag for metadata like the title and character set."
  },
  {
    "n": 3,
    "title": "HTML Elements and Tags",
    "math": "Syntax analysis",
    "note": "Defines HTML elements as the building blocks of web pages, represented by tags. This lesson covers the syntax of opening and closing tags, the concept of nested elements, and empty elements like `<br>` and `<hr>`, all within a simple web page context."
  },
  {
    "n": 4,
    "title": "HTML Attributes",
    "math": "Key-value pairs",
    "note": "This section delves into HTML attributes, which provide additional information about elements. It will cover global attributes like `id`, `class`, and `title`, and how they are used to control element behavior and styling in a web browser."
  },
  {
    "n": 5,
    "title": "Headings, Paragraphs, and Comments",
    "math": "Number theory",
    "note": "Focuses on the use of heading tags (`<h1>` through `<h6>`) to define a hierarchy of titles, the paragraph tag (`<p>`) for text blocks, and how to add comments (`<!-- ... -->`) to an HTML document for documentation."
  },
  {
    "n": 6,
    "title": "Basic Text Formatting",
    "math": "Typography",
    "note": "Covers various HTML tags for basic text formatting, such as `<b>` for bold, `<i>` for italic, and `<u>` for underline. The lesson also introduces semantic tags like `<strong>` and `<em>` for conveying importance and emphasis."
  },
  {
    "n": 7,
    "title": "Advanced Text Formatting",
    "math": "Typography",
    "note": "Explores more advanced text formatting tags, including `<sub>` for subscript, `<sup>` for superscript, `<mark>` for highlighted text, and `<q>` for inline quotations. The context is on adding richer semantics to text content."
  },
  {
    "n": 8,
    "title": "Creating Hyperlinks",
    "math": "Graph theory",
    "note": "This section explains how to create hyperlinks using the anchor `<a>` tag. It covers linking to external pages, internal pages, and specific parts of a page using fragment identifiers (`#id`)."
  },
  {
    "n": 9,
    "title": "Link Attributes",
    "math": "Logic",
    "note": "Dives deeper into the anchor tag by explaining important attributes like `target` (e.g., `_blank` to open in a new tab), `rel` (e.g., `noopener noreferrer` for security), and `download` for prompting a file download."
  },
  {
    "n": 10,
    "title": "Embedding Images",
    "math": "Coordinate geometry",
    "note": "Teaches how to embed images into a web page using the `<img>` tag. The lesson covers the essential `src` and `alt` attributes, as well as `width` and `height` for specifying image dimensions."
  },
  {
    "n": 11,
    "title": "Unordered and Ordered Lists",
    "math": "Set theory",
    "note": "This lesson covers the creation of bulleted lists with the `<ul>` (unordered list) tag and numbered lists with the `<ol>` (ordered list) tag, using `<li>` for each list item."
  },
  {
    "n": 12,
    "title": "Description Lists",
    "math": "Key-value pairs",
    "note": "Explains how to create description lists using the `<dl>` tag, with `<dt>` for terms and `<dd>` for their definitions. This is useful for creating glossaries or displaying metadata."
  },
  {
    "n": 13,
    "title": "Creating Tables",
    "math": "Matrix algebra",
    "note": "Explains how to create tables to display tabular data using `<table>`, `<tr>` (table row), `<th>` (table header), and `<td>` (table data) tags. The lesson covers basic table structure."
  },
  {
    "n": 14,
    "title": "Advanced Table Features",
    "math": "Matrix algebra",
    "note": "Covers more advanced table features, including using `colspan` and `rowspan` attributes to merge cells, and `<thead>`, `<tbody>`, and `<tfoot>` to group table content for better structure and styling."
  },
  {
    "n": 15,
    "title": "Block vs. Inline Elements",
    "math": "Set theory",
    "note": "This section differentiates between block-level elements (like `<div>`, `<p>`) which start on a new line and take up the full width, and inline-level elements (like `<span>`, `<a>`) which do not, explaining how they affect page layout."
  },
  {
    "n": 16,
    "title": "The `<div>` and `<span>` Elements",
    "math": "Set theory",
    "note": "Explains the purpose of the `<div>` and `<span>` elements as generic containers for grouping content. `<div>` is a block-level container for styling sections, while `<span>` is an inline container for styling parts of text."
  },
  {
    "n": 17,
    "title": "Introduction to HTML Forms",
    "math": "Logic",
    "note": "Introduces the `<form>` element for collecting user input. This lesson covers the `action` and `method` (GET/POST) attributes and the basic `<input>` element with the `text` type."
  },
  {
    "n": 18,
    "title": "Common Form Input Types",
    "math": "Set theory",
    "note": "Explores common `<input>` types such as `password`, `submit`, `reset`, `radio`, and `checkbox`. The lesson demonstrates how to use these to build interactive forms in a web browser."
  },
  {
    "n": 19,
    "title": "HTML5 Form Input Types",
    "math": "Set theory",
    "note": "Covers the additional input types introduced in HTML5, such as `date`, `email`, `number`, `range`, and `color`, which provide better user experiences and built-in browser validation."
  },
  {
    "n": 20,
    "title": "Other Form Elements",
    "math": "Set theory",
    "note": "Explains other important form elements beyond `<input>`, including `<textarea>` for multi-line text, `<select>` for dropdown lists, and `<button>` for more flexible buttons."
  },
  {
    "n": 21,
    "title": "Form Validation",
    "math": "Logic",
    "note": "This lesson covers client-side form validation using HTML5 attributes like `required`, `minlength`, `maxlength`, and `pattern` (for regular expressions), which helps ensure data quality before submission."
  },
  {
    "n": 22,
    "title": "Introduction to Semantic HTML",
    "math": "Set theory",
    "note": "Explains the importance of using semantic HTML elements that describe their meaning to both the browser and the developer. This lesson contrasts semantic elements with non-semantic elements like `<div>`."
  },
  {
    "n": 23,
    "title": "HTML5 Structural Elements",
    "math": "Graph theory",
    "note": "Introduces the main semantic structural elements from HTML5, such as `<header>`, `<footer>`, `<nav>`, `<main>`, `<section>`, and `<article>`, for creating well-structured and meaningful page layouts."
  },
  {
    "n": 24,
    "title": "Other Semantic Elements",
    "math": "Set theory",
    "note": "Covers other useful semantic elements like `<aside>` for side content, `<figure>` and `<figcaption>` for embedding illustrations or diagrams, and `<time>` for representing dates and times."
  },
  {
    "n": 25,
    "title": "Embedding Audio",
    "math": "Signal processing",
    "note": "Explains how to embed audio content directly into a web page using the `<audio>` element. The lesson covers providing multiple source files and adding controls for playback."
  },
  {
    "n": 26,
    "title": "Embedding Video",
    "math": "Signal processing",
    "note": "Covers the `<video>` element for embedding video content. The lesson explains attributes like `controls`, `autoplay`, `loop`, and how to specify video dimensions and poster images."
  },
  {
    "n": 27,
    "title": "Working with Iframes",
    "math": "Set theory",
    "note": "Explains the use of the `<iframe>` tag to embed another HTML document within the current one. The lesson discusses common use cases like embedding maps or videos from external services and security considerations."
  },
  {
    "n": 28,
    "title": "Introduction to SVG in HTML",
    "math": "Vector calculus",
    "note": "Provides an introduction to Scalable Vector Graphics (SVG) and how to embed SVG code directly into an HTML document to create resolution-independent graphics and icons."
  },
  {
    "n": 29,
    "title": "Introduction to Canvas",
    "math": "Coordinate geometry",
    "note": "Introduces the `<canvas>` element, which provides a container for drawing graphics on the fly using JavaScript. This lesson explains the basic setup and how it differs from SVG."
  },
  {
    "n": 30,
    "title": "HTML and CSS",
    "math": "Set theory",
    "note": "This lesson explains the three ways to include CSS in an HTML document: inline styles (attribute), internal stylesheets (`<style>` tag), and external stylesheets (`<link>` tag). The context is on how HTML and CSS work together to style a web page."
  },
  {
    "n": 31,
    "title": "HTML and JavaScript",
    "math": "Logic",
    "note": "Introduces how to include JavaScript in an HTML document using the `<script>` tag. The lesson covers including scripts inline or from an external file, and the importance of placement (head vs. end of body)."
  },
  {
    "n": 32,
    "title": "HTML Entities and Symbols",
    "math": "Character encoding",
    "note": "Explains how to display reserved characters and other symbols in HTML using character entities, such as `&lt;` for `<` and `&copy;` for the copyright symbol. The context is on ensuring correct rendering of special characters."
  },
  {
    "n": 33,
    "title": "HTML Character Sets and Encoding",
    "math": "Information theory",
    "note": "This section covers the importance of specifying a character encoding for an HTML document, with UTF-8 being the standard. It explains how the `<meta charset=\"UTF-8\">` tag ensures proper interpretation of the document's text."
  },
  {
    "n": 34,
    "title": "The `head` Element in Detail",
    "math": "Metadata",
    "note": "Provides a detailed look at the contents of the `<head>` element. It covers the `<title>`, `<meta>`, `<link>`, and `<base>` tags, explaining their roles in providing metadata and linking to external resources."
  },
  {
    "n": 35,
    "title": "Responsive Web Design and the Viewport",
    "math": "Geometry",
    "note": "Introduces the concept of responsive web design and the importance of the viewport meta tag (`<meta name=\"viewport\">`) for controlling how a web page is displayed on mobile devices."
  },
  {
    "n": 36,
    "title": "HTML Accessibility (A11y)",
    "math": "Ethics",
    "note": "Provides an introduction to web accessibility (a11y). The lesson explains the importance of writing accessible HTML and introduces basic concepts like semantic HTML, `alt` text for images, and proper form labeling."
  },
  {
    "n": 37,
    "title": "Introduction to WAI-ARIA",
    "math": "Accessibility",
    "note": "Introduces WAI-ARIA (Web Accessibility Initiative – Accessible Rich Internet Applications), a set of attributes that can be added to HTML to make web content more accessible to people with disabilities, especially for dynamic content and advanced UI controls."
  },
  {
    "n": 38,
    "title": "HTML Best Practices and Validation",
    "math": "Logic",
    "note": "This section covers best practices for writing clean, maintainable, and valid HTML code. It also introduces the concept and importance of HTML validation using tools like the W3C validator to ensure code quality and browser compatibility."
  },
  {
    "n": 39,
    "title": "Custom Data Attributes",
    "math": "Key-value pairs",
    "note": "Explains how to use custom data attributes (`data-*`) to store private custom data for an element. The lesson demonstrates how this data can be accessed and manipulated with JavaScript for creating interactive experiences."
  }
]
