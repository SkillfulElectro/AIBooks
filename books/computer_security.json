[
  {
    "n": 1,
    "title": "The CIA Triad and Core Security Principles",
    "math": "Security principles",
    "note": "This section introduces the foundational model for information security: the CIA Triad (Confidentiality, Integrity, Availability). It also defines other key principles like Authentication, Authorization, and Non-repudiation, which form the basis of secure systems."
  },
  {
    "n": 2,
    "title": "Understanding Security Controls",
    "math": "Control types (Managerial, Operational, Technical)",
    "note": "This lesson categorizes the different types of security safeguards. It explains the hierarchy of controls: Managerial (policies, procedures), Operational (day-to-day tasks performed by people), and Technical (implemented in hardware or software). It also contrasts control functions: Preventive, Detective, Corrective, Deterrent, and Compensating."
  },
  {
    "n": 3,
    "title": "Assets, Vulnerabilities, Threats, and Risks",
    "math": "Risk analysis",
    "note": "This lesson defines the fundamental terminology of security. An 'Asset' is what you want to protect. A 'Vulnerability' is a weakness. A 'Threat' is a potential danger. 'Risk' is the likelihood of a threat exploiting a vulnerability and the resulting impact. This forms the basis of risk management."
  },
  {
    "n": 4,
    "title": "Introduction to Cryptography",
    "math": "Cryptography",
    "note": "This section explains the role of cryptography as a primary tool for achieving confidentiality and integrity. It defines the basic concepts of encryption (converting plaintext to ciphertext) and decryption. The difference between an algorithm (like AES) and a key is clarified."
  },
  {
    "n": 5,
    "title": "Symmetric vs. Asymmetric Encryption",
    "math": "Symmetric-key vs. public-key cryptography",
    "note": "This lesson compares the two main types of encryption. Symmetric-key cryptography uses the same secret key for both encryption and decryption, making it fast but requiring a secure way to share the key. Asymmetric (public-key) cryptography uses a public key to encrypt and a private key to decrypt, solving the key-sharing problem."
  },
  {
    "n": 6,
    "title": "Hash Functions and Digital Signatures",
    "math": "Cryptographic hash functions",
    "note": "This section covers two critical cryptographic tools. A Hash Function creates a unique, fixed-size 'fingerprint' of data, used to verify integrity. A Digital Signature combines hashing with private-key encryption to provide authenticity, integrity, and non-repudiation (proof of origin)."
  },
  {
    "n": 7,
    "title": "Authentication and Multi-Factor Authentication (MFA)",
    "math": "Authentication factors",
    "note": "This lesson defines authentication as verifying an identity using one or more factors: something you know (password), something you have (token), and something you are (biometrics). It explains why single-factor (password-only) is weak and how MFA significantly increases security."
  },
  {
    "n": 8,
    "title": "Access Control Models",
    "math": "Access control policy",
    "note": "This lesson explains what happens after authentication: authorization. It covers different models for controlling what a user can do. Key models discussed are Discretionary Access Control (DAC), Mandatory Access Control (MAC), and the most common, Role-Based Access Control (RBAC)."
  },
  {
    "n": 9,
    "title": "Malware: Viruses, Worms, Trojans, and Ransomware",
    "math": "Malicious software classification",
    "note": "This lesson defines Malware and differentiates between common types. A Virus attaches to a program, a Worm self-propagates across networks, a Trojan disguises itself as legitimate software, and Ransomware encrypts files and demands payment for their release."
  },
  {
    "n": 10,
    "title": "The Human Element: Social Engineering and Phishing",
    "math": "Psychological manipulation",
    "note": "This lesson explains that the weakest link is often human. It defines Social Engineering as manipulating people to divulge information. It focuses on Phishing, the use of deceptive emails and websites to steal credentials, as the most common example."
  },
  {
    "n": 11,
    "title": "Network Attack: Denial-of-Service (DoS)",
    "math": "Resource exhaustion",
    "note": "This lesson defines a Denial-of-Service (DoS) attack, which aims to make a service unavailable by overwhelming it with traffic. It also introduces the concept of a Distributed Denial-of-Service (DDoS) attack, which uses many compromised systems to launch the attack."
  },
  {
    "n": 12,
    "title": "Network Attack: Man-in-the-Middle (MitM)",
    "math": "Eavesdropping and impersonation",
    "note": "This section covers Man-in-the-Middle (MitM) attacks, where an attacker secretly relays and possibly alters the communication between two parties who believe they are directly communicating with each other. The importance of encryption (like HTTPS) as a defense is highlighted."
  },
  {
    "n": 13,
    "title": "Web Vulnerability: SQL Injection (SQLi)",
    "math": "Input validation",
    "note": "This lesson explains a common web application vulnerability where an attacker manipulates an application's database queries to steal or modify data. The importance of using parameterized queries (prepared statements) as a primary defense is emphasized."
  },
  {
    "n": 14,
    "title": "Web Vulnerability: Cross-Site Scripting (XSS)",
    "math": "Code injection",
    "note": "This section covers Cross-Site Scripting (XSS), where an attacker injects malicious scripts into a website, which then get executed in other users' browsers. This can be used to steal session cookies or perform actions on behalf of the user. The need for output encoding is explained as a defense."
  },
  {
    "n": 15,
    "title": "Security Architecture: Secure Network Design",
    "math": "Defense in depth",
    "note": "This lesson covers architectural principles for building secure networks. It introduces concepts like Defense in Depth (layering security controls), network segmentation (creating zones like a DMZ), and the role of Firewalls and Intrusion Detection/Prevention Systems (IDS/IPS)."
  },
  {
    "n": 16,
    "title": "Security Architecture: Zero Trust",
    "math": "Principle of least privilege",
    "note": "This lesson explains the modern Zero Trust security model. It is based on the principle of 'never trust, always verify'. It assumes no implicit trust, even for internal users, and requires continuous verification of identity and device health before granting access to resources."
  },
  {
    "n": 17,
    "title": "Security Architecture: Cloud and IoT Security",
    "math": "Shared responsibility model",
    "note": "This lesson discusses the unique security challenges of modern environments. For Cloud, it introduces the 'shared responsibility model' which defines the security obligations of the cloud provider vs. the customer. For the Internet of Things (IoT), it highlights risks like weak default passwords and lack of updates."
  },
  {
    "n": 18,
    "title": "Security Architecture: Physical Security Controls",
    "math": "Physical access control",
    "note": "This lesson covers the crucial domain of physical security. It discusses measures used to protect facilities and hardware, such as perimeter controls (fences, gates), building controls (locks, access cards), and device security (cable locks, server cages)."
  },
  {
    "n": 19,
    "title": "Secure Software Development Lifecycle (SSDLC)",
    "math": "DevSecOps",
    "note": "This lesson explains the importance of integrating security into every phase of software development. It introduces concepts like threat modeling during the design phase, using static/dynamic analysis security testing (SAST/DAST) tools, and fostering a culture of secure coding."
  },
  {
    "n": 20,
    "title": "Security Operations: Vulnerability Management",
    "math": "Vulnerability scanning",
    "note": "This section covers the continuous process of identifying, assessing, and remediating vulnerabilities. It explains the role of vulnerability scanning tools in proactively finding weaknesses and the importance of prioritizing fixes based on severity and risk."
  },
  {
    "n": 21,
    "title": "Security Operations: Penetration Testing",
    "math": "Ethical hacking",
    "note": "This lesson introduces penetration testing (or 'pen testing') as a simulated cyberattack against your own systems to check for exploitable vulnerabilities. It is a form of ethical hacking used to validate the effectiveness of security controls from an attacker's perspective."
  },
  {
    "n": 22,
    "title": "Security Operations: Incident Response",
    "math": "Emergency management",
    "note": "This lesson provides an overview of Incident Response, the organized approach to managing the aftermath of a security breach. It introduces the typical phases: Preparation, Identification, Containment, Eradication, Recovery, and Lessons Learned."
  },
  {
    "n": 23,
    "title": "Security Operations: Digital Forensics",
    "math": "Chain of custody",
    "note": "This lesson introduces the principles of digital forensics, which is the process of recovering and investigating material found in digital devices. It emphasizes the importance of evidence preservation, maintaining a 'chain of custody', and proper analysis techniques to be used in legal proceedings."
  },
  {
    "n": 24,
    "title": "Governance, Risk, and Compliance (GRC)",
    "math": "Organizational oversight",
    "note": "This lesson covers the high-level management of security. 'Governance' is the framework of policies and processes. 'Risk Management' is the formal process of identifying and mitigating risks. 'Compliance' is the act of adhering to relevant laws, regulations, and standards (e.g., GDPR, HIPAA, PCI DSS)."
  }
]
