[
  {
    "n": 1,
    "title": "What Is Jira?",
    "math": "Project management software",
    "note": "This section introduces Jira as a powerful application for bug tracking, issue tracking, and agile project management. It explains that Jira is highly configurable and is used by teams to plan, track, and release software."
  },
  {
    "n": 2,
    "title": "Jira Products and Project Types",
    "math": "Product lines",
    "note": "This lesson clarifies the different Jira products (Software, Service Management) and project templates (Kanban, Scrum). It also explains the difference between company-managed and team-managed projects."
  },
  {
    "n": 3,
    "title": "Key Concepts: Issues, Projects, and Workflows",
    "math": "Core entities",
    "note": "This section defines the fundamental building blocks of Jira. A 'Project' is a container for work. An 'Issue' is a single work item (e.g., bug, task, story). A 'Workflow' is the set of statuses and transitions an issue moves through."
  },
  {
    "n": 4,
    "title": "Navigating the Jira UI",
    "math": "User interface tour",
    "note": "This lesson provides a practical guide to creating a project and finding your way around the Jira interface, explaining the purpose of the main navigation elements like the project sidebar, boards, and backlog."
  },
  {
    "n": 5,
    "title": "Creating and Managing Issues",
    "math": "Data entry and management",
    "note": "This lesson walks through creating an issue. It covers filling out key fields like Summary, Description, Assignee, and Priority. It also demonstrates how to add comments, attach files, and link issues."
  },
  {
    "n": 6,
    "title": "Using a Kanban Board",
    "math": "Kanban methodology",
    "note": "This lesson provides a guide to the Jira Kanban board. It explains how columns represent workflow stages (e.g., 'To Do', 'In Progress', 'Done') and how to set Work in Progress (WIP) limits to prevent bottlenecks."
  },
  {
    "n": 7,
    "title": "Introduction to Scrum in Jira",
    "math": "Scrum methodology",
    "note": "This lesson introduces the Scrum framework. It explains the core concepts of Sprints (fixed-length iterations), the Product Backlog, and the roles of the Scrum team, all within the context of how Jira supports this framework."
  },
  {
    "n": 8,
    "title": "Managing the Backlog",
    "math": "Backlog grooming",
    "note": "This section focuses on the Backlog view in a Jira Scrum project. It demonstrates how to create, prioritize (by dragging and dropping), and estimate issues (using Story Points) in the backlog."
  },
  {
    "n": 9,
    "title": "Planning and Running a Sprint",
    "math": "Sprint planning and tracking",
    "note": "This section demonstrates the process of Sprint Planning: creating a Sprint, moving issues from the Backlog into it, and starting the sprint. It also covers using the Active Sprints board to track progress during the sprint."
  },
  {
    "n": 10,
    "title": "Basic Searching and Filtering",
    "math": "Boolean logic",
    "note": "This lesson covers the basic search functionality in Jira, allowing users to filter issues by key fields like project, status, assignee, and issue type."
  },
  {
    "n": 11,
    "title": "Advanced Searching with JQL",
    "math": "Query languages",
    "note": "This section introduces JQL (Jira Query Language) for more powerful searching. It covers the basic syntax (e.g., `project = 'PROJ' AND status = 'Done'`) and introduces more advanced functions (`membersOf()`) and history-based queries (`WAS`)."
  },
  {
    "n": 12,
    "title": "Saving Searches as Filters",
    "math": "Saved queries",
    "note": "This lesson explains how a JQL query can be saved as a 'filter'. This allows you to easily re-run the search later. Saved filters are also used as the basis for dashboards, boards, and subscriptions."
  },
  {
    "n": 13,
    "title": "Dashboards and Gadgets",
    "math": "Data visualization",
    "note": "This section introduces Jira Dashboards for creating a high-level, visual overview. It explains that dashboards are composed of 'gadgets', which are configurable widgets that can display charts, statistics, or the results of a saved filter."
  },
  {
    "n": 14,
    "title": "Agile Reports",
    "math": "Agile metrics",
    "note": "This lesson covers key reports for agile teams. For Scrum, it explains the Burndown Chart and Velocity Chart. For Kanban, it introduces the Cumulative Flow Diagram, which shows the status of issues over time."
  },
  {
    "n": 15,
    "title": "Advanced Planning with Roadmaps",
    "math": "Gantt charts",
    "note": "An introduction to Jira's high-level planning tools. It explains how Roadmaps (or Timelines) are used to visualize epics and dependencies over time, providing a long-term strategic view of project initiatives across multiple teams."
  },
  {
    "n": 16,
    "title": "Automation for Jira",
    "math": "Rule-based logic",
    "note": "A dedicated lesson on Jira's native automation engine. It explains the 'trigger-condition-action' rule structure and demonstrates how to create a simple automation rule, such as automatically transitioning an issue or notifying a Slack channel."
  },
  {
    "n": 17,
    "title": "Integrating Jira with Source Control",
    "math": "Toolchain integration",
    "note": "This section explains how to connect Jira to a version control system like GitHub or Bitbucket. It demonstrates how including an issue key (e.g., 'PROJ-123') in a commit message or branch name automatically links the development work back to the Jira issue."
  },
  {
    "n": 18,
    "title": "Jira Administration: Users and Groups",
    "math": "User management",
    "note": "This lesson introduces the basics of Jira administration, covering how to invite new users and organize them into groups to simplify permission management."
  },
  {
    "n": 19,
    "title": "Jira Administration: Workflows",
    "math": "Workflow customization",
    "note": "This section focuses on customizing workflows. It explains how an administrator can use the workflow editor to add new statuses (steps) and transitions (paths between steps) to model a team's specific process. Post functions and validators are also introduced."
  },
  {
    "n": 20,
    "title": "Jira Administration: Custom Fields and Screens",
    "math": "Schema customization",
    "note": "A lesson that expands on administration. It explains how to create custom fields to capture specific information and how to design different 'screens' (sets of fields) for the create, edit, and view operations of an issue."
  },
  {
    "n": 21,
    "title": "Jira Administration: Schemes",
    "math": "Configuration management",
    "note": "A conceptual lesson on Jira's powerful 'schemes' model. It explains that schemes (e.g., Permission Schemes, Notification Schemes, Workflow Schemes) are reusable configurations that can be associated with multiple projects, which is the key to managing Jira at scale."
  }
]
