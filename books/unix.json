[
  {
    "n": 1,
    "title": "What Is Unix? The Unix Philosophy",
    "math": "Operating system philosophy",
    "note": "Introduces Unix as a family of operating systems and its core philosophy: programs should do one thing well, work together, and use text streams as a universal interface."
  },
  {
    "n": 2,
    "title": "The Kernel and the Shell",
    "math": "OS architecture",
    "note": "Explains the two core components: the Kernel (manages system resources) and the Shell (a command-line interpreter like Bash that provides the user interface to the kernel)."
  },
  {
    "n": 3,
    "title": "Basic Navigation and File Management",
    "math": "File system manipulation",
    "note": "Covers the most fundamental commands: `pwd` (print directory), `ls` (list contents), `cd` (change directory), `mkdir` (make directory), `cp` (copy), `mv` (move/rename), and `rm` (remove)."
  },
  {
    "n": 4,
    "title": "Viewing File Contents",
    "math": "File viewing",
    "note": "Introduces tools for viewing text files: `cat` (concatenate/print), `less` (pager), and `head`/`tail` for viewing the beginning or end of a file."
  },
  {
    "n": 5,
    "title": "Creating Links: Hard and Symbolic",
    "math": "Pointers & References",
    "note": "Explains how to create links between files. Covers hard links (another name for the same file data) and symbolic links (`ln -s`), which are pointers to a file path."
  },
  {
    "n": 6,
    "title": "The Unix Permission Model",
    "math": "File system permissions",
    "note": "Details the standard Unix permissions: read (r), write (w), and execute (x) for the user, group, and others. Introduces `chmod` for changing permissions and `chown` for changing ownership."
  },
  {
    "n": 7,
    "title": "Standard I/O and Redirection",
    "math": "Standard streams (stdin, stdout, stderr)",
    "note": "Introduces the three standard streams and explains how to redirect them using `>` (overwrite), `>>` (append), and `<` (input from file)."
  },
  {
    "n": 8,
    "title": "Pipes: Chaining Commands",
    "math": "Pipelines",
    "note": "Introduces the pipe `|` operator, a core feature of the Unix philosophy. It connects the stdout of one command to the stdin of another, allowing you to build powerful command chains."
  },
  {
    "n": 9,
    "title": "Text Processing: `grep`",
    "math": "Pattern matching (grep)",
    "note": "Introduces `grep`, a fundamental tool for searching plain-text data for lines that match a regular expression."
  },
  {
    "n": 10,
    "title": "More Text Tools: `sort`, `uniq`, `cut`, `tr`, `wc`",
    "math": "Text manipulation",
    "note": "Covers a suite of essential text utilities: `sort` (sorts lines), `uniq` (filters duplicate adjacent lines), `cut` (extracts sections from each line), `tr` (translates characters), and `wc` (counts lines, words, and bytes)."
  },
  {
    "n": 11,
    "title": "Advanced Text Processing: `sed` and `awk`",
    "math": "Stream editing & AWK language",
    "note": "Introduces two powerful tools: `sed` (the stream editor) for find-and-replace and other text transformations, and `awk` for processing structured, column-based text data."
  },
  {
    "n": 12,
    "title": "Process Management",
    "math": "Process control",
    "note": "Covers how to manage running processes. Introduces `ps` (list processes), `kill` (sends signals to terminate), `&` (run in background), and `jobs` (view background jobs)."
  },
  {
    "n": 13,
    "title": "Finding Files with `find`",
    "math": "File searching",
    "note": "Introduces the `find` command, a powerful utility for searching for files and directories based on criteria like name, size, modification time, or owner."
  },
  {
    "n": 14,
    "title": "Checking Disk Usage with `df` and `du`",
    "math": "Disk space analysis",
    "note": "Covers two essential utilities for monitoring disk space: `df` (display free disk space for filesystems) and `du` (display disk usage for a directory and its subdirectories)."
  },
  {
    "n": 15,
    "title": "Archiving and Compressing Files",
    "math": "Archiving & Compression",
    "note": "Covers `tar` for creating archives from files, and `gzip` for compressing files. Explains how they are often used together to create compressed archives (`.tar.gz`)."
  },
  {
    "n": 16,
    "title": "Remote Administration with SSH",
    "math": "Secure Shell (SSH)",
    "note": "Introduces `ssh` as the standard protocol for securely connecting to the command line of a remote Unix server. Covers the basic `ssh user@hostname` command."
  },
  {
    "n": 17,
    "title": "Secure File Transfer with `scp` and `rsync`",
    "math": "Secure file transfer",
    "note": "Explains how to transfer files to and from remote systems. Covers `scp` (secure copy) for simple transfers and `rsync` for more efficient, resumable, and directory-level synchronization."
  },
  {
    "n": 18,
    "title": "Introduction to the `vi`/`vim` Text Editor",
    "math": "Text editing",
    "note": "Provides a survival guide to the most ubiquitous Unix editor. Covers the basic modes (Normal, Insert), and essential commands for opening a file, editing text, saving, and quitting."
  },
  {
    "n": 19,
    "title": "Introduction to Shell Scripting",
    "math": "Shell scripting",
    "note": "Explains how to combine Unix commands into a file to create a shell script for automating tasks. Covers making a script executable and the importance of the 'shebang' (`#!/bin/bash`)."
  },
  {
    "n": 20,
    "title": "Environment Variables and the `PATH`",
    "math": "Environment variables",
    "note": "Explains environment variables for configuring the shell environment. Focuses on the `PATH` variable, which tells the shell where to find executable programs."
  }
]
